---
interface Props {
  title: string;
}

const { title } = Astro.props;

const navItems = [
  { href: "/admin", label: "Home Admin" },
  { href: "/admin/articles", label: "Articles" },
  { href: "/admin/ctfs", label: "Ctf" },
  { href: "/admin/projects", label: "Projets" },
  { href: "/admin/messages", label: "Messages" },
];
---

<!doctype html>
<html lang="fr" class="scroll-smooth">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Lucas | Portfolio" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@400;500;600;700&display=swap">
    <title>{title}</title>
  </head>
  <body class="bg-gray-900 text-gray-100 font-space-grotesk">
    <div class="fixed inset-0 -z-10 h-full w-full bg-[linear-gradient(to_right,#4f4f4f2e_1px,transparent_1px),linear-gradient(to_bottom,#4f4f4f2e_1px,transparent_1px)] bg-[size:14px_24px]"></div>
    
    <!-- Navigation -->
    <nav class="fixed w-full z-50 bg-gray-900/80 backdrop-blur-lg border-b border-gray-800/50">
      <div class="container mx-auto px-6">
        <div class="relative flex items-center justify-between h-16">
          <!-- Logo -->
          <a href="/" class="text-2xl font-bold">
            <span class="text-cyan-500">Lucas</span>
            <span class="text-white">Portfolio</span>
          </a>

          <!-- Mobile menu button -->
          <button 
            id="mobile-menu-button" 
            class="md:hidden inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-white hover:bg-gray-700 focus:outline-none"
            aria-label="Menu principal"
          >
            <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
            </svg>
          </button>

          <!-- Desktop menu -->
          <div class="hidden md:flex md:items-center md:space-x-8">
            {navItems.map((item) => (
              <a
                href={item.href}
                class="text-gray-300 hover:text-cyan-500 px-3 py-2 text-sm font-medium transition-colors duration-300"
              >
                {item.label}
              </a>
            ))}
          </div>
        </div>

        <!-- Mobile menu -->
        <div id="mobile-menu" class="hidden md:hidden">
          <div class="px-2 pt-2 pb-3 space-y-1">
            {navItems.map((item) => (
              <a
                href={item.href}
                class="text-gray-300 hover:text-cyan-500 block px-3 py-2 text-base font-medium transition-colors duration-300"
              >
                {item.label}
              </a>
            ))}
          </div>
        </div>
      </div>
    </nav>

    <slot />

    <footer class="bg-gray-900/80 backdrop-blur-lg border-t border-gray-800/50 py-8">
      <div class="container mx-auto px-6 text-center text-gray-400">
        <p>&copy; 2024 Lucas Torres. Tous droits réservés.</p>
      </div>
    </footer>

    <script>
      // Menu mobile toggle
      const mobileMenuButton = document.getElementById('mobile-menu-button');
      const mobileMenu = document.getElementById('mobile-menu');

      if (mobileMenuButton && mobileMenu) {
        mobileMenuButton.addEventListener('click', () => {
          mobileMenu.classList.toggle('hidden');
          
          // Change l'icône du bouton
          const icon = mobileMenuButton.querySelector('svg');
          if (icon) {
            if (mobileMenu.classList.contains('hidden')) {
              icon.innerHTML = '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />';
            } else {
              icon.innerHTML = '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />';
            }
          }
        });

        // Ferme le menu mobile quand on clique sur un lien
        mobileMenu.querySelectorAll('a').forEach(link => {
          link.addEventListener('click', () => {
            mobileMenu.classList.add('hidden');
          });
        });
      }
    </script>
  </body>
</html>

<style is:global>
  :root {
    --glow: 0 0 40px rgb(34 211 238 / 0.1);
  }
  
  html {
    font-family: 'Space Grotesk', sans-serif;
  }

  .animate-fade-in {
    animation: fadeIn 1s ease-out;
  }

  .animate-slide-up {
    animation: slideUp 0.8s ease-out;
  }

  @keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
  }

  @keyframes slideUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .glow {
    box-shadow: var(--glow);
  }

  .hover-glow:hover {
    box-shadow: var(--glow);
  }
</style>