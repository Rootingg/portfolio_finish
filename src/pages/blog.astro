---
import Layout from '../layouts/Layout.astro';
import Modal from '../components/Modal.astro';
import { db } from '../lib/db';

const result = await db.execute(`
  SELECT id, title, description, content, icon, created_at as date
  FROM articles 
  ORDER BY created_at DESC
`);

const articles = result.rows;
---

<Layout title="Blog - Cybersécurité">
  <main class="min-h-screen bg-gradient-to-b from-gray-900 to-gray-800">
    <div class="container mx-auto px-4 py-24 max-w-6xl">
      <h1 class="text-4xl font-bold text-center mb-16">
        <span class="bg-gradient-to-r from-cyan-500 to-blue-500 text-transparent bg-clip-text">Blog</span>
      </h1>

      <div class="max-w-4xl mx-auto">
        <input
          type="search"
          id="search"
          placeholder="Rechercher des articles..."
          class="w-full px-4 py-3 mb-8 bg-gray-800/50 rounded-xl border border-gray-700 focus:border-cyan-500/50 focus:outline-none text-gray-300 placeholder-gray-500"
        />

        <div class="space-y-8" id="articles-container">
          {articles.map((article) => (
            <>
              <button 
                class="w-full text-left article-item"
                data-modal-target={`modal-${article.id}`}
                data-title={article.title.toLowerCase()}
                data-description={article.description.toLowerCase()}
                data-content={article.content.toLowerCase()}
              >
                <article class="bg-gray-800/50 backdrop-blur p-8 rounded-xl shadow-lg border border-gray-700 hover:border-cyan-500/50 transition-all duration-300 hover:-translate-y-1 cursor-pointer">
                  <div class="flex items-start gap-4">
                    <div class="text-4xl">{article.icon}</div>
                    <div>
                      <h2 class="text-2xl font-bold mb-2 text-cyan-400">{article.title}</h2>
                      <p class="text-gray-400 text-sm mb-3">
                        {new Date(article.date).toLocaleDateString('fr-FR', { 
                          year: 'numeric', 
                          month: 'long', 
                          day: 'numeric' 
                        })}
                      </p>
                      <p class="text-gray-300">{article.description}</p>
                    </div>
                  </div>
                </article>
              </button>

              <Modal id={`modal-${article.id}`}>
                <div class="prose prose-invert max-w-none">
                  <div class="text-4xl mb-4">{article.icon}</div>
                  <h1 class="text-3xl font-bold mb-2 text-cyan-400">{article.title}</h1>
                  <p class="text-gray-400 text-sm mb-6">
                    {new Date(article.date).toLocaleDateString('fr-FR', { 
                      year: 'numeric', 
                      month: 'long', 
                      day: 'numeric' 
                    })}
                  </p>
                  <div class="text-gray-300" set:html={article.content} />
                </div>
              </Modal>
            </>
          ))}
        </div>
        
        <p id="no-results" class="hidden text-center text-gray-400">Aucun article trouvé</p>
      </div>
    </div>
  </main>
</Layout>

<script>
  const searchInput = document.getElementById('search');
  const articlesContainer = document.getElementById('articles-container');
  const noResults = document.getElementById('no-results');
  const articles = document.querySelectorAll('.article-item');

  searchInput?.addEventListener('input', (e) => {
    const query = (e.target as HTMLInputElement).value.toLowerCase().trim();
    let hasResults = false;

    articles.forEach((article) => {
      const title = article.getAttribute('data-title') || '';
      const description = article.getAttribute('data-description') || '';
      const content = article.getAttribute('data-content') || '';

      if (title.includes(query) || description.includes(query) || content.includes(query)) {
        (article as HTMLElement).style.display = 'block';
        hasResults = true;
      } else {
        (article as HTMLElement).style.display = 'none';
      }
    });

    if (articlesContainer && noResults) {
      articlesContainer.style.display = hasResults ? 'block' : 'none';
      noResults.style.display = hasResults ? 'none' : 'block';
    }
  });
</script>

<style>
  .prose {
    max-width: 65ch;
    margin: 0 auto;
  }
  .prose h2 {
    color: theme(colors.cyan.400);
    margin-top: 2rem;
    margin-bottom: 1rem;
  }
  .prose h3 {
    color: theme(colors.cyan.400);
    margin-top: 1.5rem;
    margin-bottom: 0.75rem;
  }
  .prose p {
    margin-bottom: 1rem;
    line-height: 1.75;
  }
  .prose ul {
    margin-bottom: 1rem;
    list-style-type: disc;
    padding-left: 1.5rem;
  }
  .prose li {
    margin-bottom: 0.5rem;
  }
</style>